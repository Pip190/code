<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wo.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.wo.domain.User">
            <id property="userId" column="user_id" jdbcType="INTEGER"/>
            <result property="username" column="username" jdbcType="VARCHAR"/>
            <result property="password" column="password" jdbcType="VARCHAR"/>
            <result property="nickName" column="nick_name" jdbcType="VARCHAR"/>
            <result property="email" column="email" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        user_id,username,password,
        nick_name,email
    </sql>
    <select id="listUser" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" />
        from user
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user
        where  user_id = #{userId,jdbcType=INTEGER}
    </select>
    <select id="selectByUsername" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from user
        where username = #{username}
    </select>
    <select id="selectAllRtnBigMap" resultType="java.util.Map">
        select <include refid="Base_Column_List"/>
            from user
    </select>
    <select id="selectAllRtnListMap" resultType="java.util.Map">
        select <include refid="Base_Column_List"/>
            from user
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from user
        where  user_id = #{userId,jdbcType=INTEGER}
    </delete>
    <!--批量删除in，设置开闭括号“（）”，直接in + foreach遍历-->
    <delete id="deleteBatchArrayIn">
        delete from user where user_id in
            <foreach collection="userIds" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
    </delete>
    <!-- 批量删除in，没有弄开闭“（）”直接在括号里边遍历元素后塞到括号里 -->
    <!--<delete id="deleteBatchArrayIn">
        delete from user where user_id in (
        <foreach collection="userIds" item="id" separator=",">
            #{id}
        </foreach>
        )
    </delete>-->
    <!-- 批量删除or方式 -->
    <delete id="deleteBatchArrayOr">
        delete from user where
             <foreach collection="userIds" item="id" separator="or">
                 user_id=#{id}
             </foreach>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.wo.domain.User" useGeneratedKeys="true">
        insert into user
        ( user_id,username,password
        ,nick_name,email)
        values (#{userId,jdbcType=INTEGER},#{username,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR}
        ,#{nickName,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="user_id" keyProperty="userId" parameterType="com.wo.domain.User" useGeneratedKeys="true">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="userId != null">userId,</if>
                <if test="username != null">username,</if>
                <if test="password != null">password,</if>
                <if test="nickName != null">nick_name,</if>
                <if test="email != null">email,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="userId != null">#{userId,jdbcType=INTEGER},</if>
                <if test="username != null">#{username,jdbcType=VARCHAR},</if>
                <if test="password != null">#{password,jdbcType=VARCHAR},</if>
                <if test="nickName != null">#{nickName,jdbcType=VARCHAR},</if>
                <if test="email != null">#{email,jdbcType=VARCHAR},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.wo.domain.User">
        update user
        <set>
                <if test="username != null">
                    username = #{username,jdbcType=VARCHAR},
                </if>
                <if test="password != null">
                    password = #{password,jdbcType=VARCHAR},
                </if>
                <if test="nickName != null">
                    nick_name = #{nickName,jdbcType=VARCHAR},
                </if>
                <if test="email != null">
                    email = #{email,jdbcType=VARCHAR},
                </if>
        </set>
        where   id = #{id,jdbcType=INTEGER} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.wo.domain.User">
        update user
        set 
            username =  #{username,jdbcType=VARCHAR},
            password =  #{password,jdbcType=VARCHAR},
            nick_name =  #{nickName,jdbcType=VARCHAR},
            email =  #{email,jdbcType=VARCHAR}
        where   user_id = #{userId,jdbcType=INTEGER}
    </update>
    <insert id="insertBatch">
        insert into user(user_id,username,password,
        nick_name,email)
        values
        <foreach collection="userCollection" item="item" separator=",">
            (#{item.userId,jdbcType=NUMERIC},#{item.username,jdbcType=VARCHAR},#{item.password,jdbcType=VARCHAR},
            #{item.nickName,jdbcType=VARCHAR},#{item.email,jdbcType=VARCHAR})
        </foreach>
    </insert>
</mapper>
